akka {
	loggers=["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
    actor{
		provider = "Akka.Actor.LocalActorRefProvider"
		deployment {
			/akkaConsumerWrapper/messageRouter/messageForwarder {
				router = round-robin-pool
				nr-of-instances = 10				
			}		
	}
	persistence{
	  journal {
		plugin = "akka.persistence.journal.sql-server"
		sql-server {
			class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
			schema-name = dbo
			auto-initialize = on
			table-name = EventJournal
			metadata-table-name = Metadata
			connection-string = "Data Source=${SQL_DATA_SOURCE};Initial Catalog=${DB_NAME};User Id=${SA_USER};Password=${SA_PASSWORD}"
		}
	  } 
	  snapshot-store{
		plugin = "akka.persistence.snapshot-store.sql-server"
		sql-server {
			class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
			schema-name = dbo
			auto-initialize = on
			table-name = SnapshotStore
			connection-string = "Data Source=${SQL_DATA_SOURCE};Initial Catalog=${DB_NAME};User Id=${?SA_USER};Password=${SA_PASSWORD};"
		}
	  }
	}
}